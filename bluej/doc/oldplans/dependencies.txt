---------------------------------
dependencies and their processing
---------------------------------

editing: there are 8 cases:

	graphical/textual
	add/delete
	uses/inherits

	1 graphical add    uses     : add import os uses comment
	2 graphical add    inherits : add extends or implements
	3 graphical delete uses     : remove import or uses comment
	4 graphical delete inherits : remove extends or implements
	5 textual   add    uses     : +
	6 textual   add    inherits : | parse dependencies and draw
	7 textual   delete uses     : |
	8 textual   delete inherits : +


source example:

    [package +.....]

    [import ....;]
    +
    // Uses local classes: +... [+, ...]

    class +... [extends +...]
       [ implements +... [+, ...] ]


 - "+" symbols mark positions which parser must find and return
 - dependencies in local package are marked with comment
 - mismatch between user declared dependencied (UDD) and parser detected
   dependencies (PDD) result in warning

parsing:

 - use modified ANTLR parser
	(modified to recognise "uses" comment)
 - parser returns source positions (marked above) and dependencies
 - distinguishes UDD and PDD (UDD are the ones in import statements and
   uses comment; PDD are the ones detected in source which are not UDD)
 - runs after every textual change (on "save" operation)
 - remove all known dependencies and regenerate from parsing

 - use "auto-editor" object:
	- takes parameters: text positions, source file, changes
	  ("changes" is a description of the changes to be made)
	- updates the source file
