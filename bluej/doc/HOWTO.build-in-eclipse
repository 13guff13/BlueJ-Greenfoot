Using the Eclipse IDE to build, run and debug BlueJ
---------------------------------------------------

Assuming you have created a project and extracted the source archive,
you then need to do the following:

1. Building: Set up the source and output paths.

   Project properties -> Java Build Path -> Source tab
   
   * check the "Allow output folders for source folders" option.
   * source folder 'bluej/boot/src' should have output folder 'bluej/boot/classes'
   * source folder 'bluej/src' should have output folder 'bluej/classes'
   * source folder 'bluej/test/src' should have output folder 'bluej/test/classes'
   
   You should also select 'UTF-8' as the character encoding in the
   project properties (under "Resource").
   
   In the Libraries tab:
   
   * add all the necessary jars from the lib directory:
     AppleJavaExtensions.jar, bjdoclet.jar, diffutils-1.2.1.jar,
     httpclient-4.1.jar, httpcore-4.1.jar, httpmime-4.1.1.jar, 
     junit-4.8.2.jar, org-netbeans-lib-cvsclient.jar, svnkit-javahl.jar, trilead.jar
   * You also need to add the 'tools.jar' file from your JDK (except in case of Mac JDK 1.6).
   
   
   In some versions, you may find some errors related to "Access restriction", to solve it:
   
   Project properties -> Java compiler –> Errors/Warnings -> Deprecated and restricted API
   Then in the "Forbidden reference (access rules)" change the default “Error” to “Ignore“. 


2. Run / Debug

   From the 'run' dropdown menu, choose 'Run Configurations...'.
   
   Add a new Java Application item (call it whatever you like).
   
   * project should be your BlueJ project, main class should be 'bluej.Boot'.
   * in the Arguments tab, set the Program arguments to '-useclassesdir=true -bluej.debug=true'
   * In the Classpath tab:
     - The bootstrap entries should contain only the JRE
     - The user entries should contain:
     	a. the 'boot/classes' folder (Advanced..., folder)
     	b. Except in case of Mac, the tools.jar from the JDK (Add External Jars...).
     	You do not need the 'classes' folder nor any of the other jar files.
 