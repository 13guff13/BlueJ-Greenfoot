/*
 * @(#)$CLASSNAME
 *
 * Zde doplnte informace o autorskych pravech
 */
$PKGLINE
import java.applet.Applet;
import java.awt.Graphics;

/**
 * Sem napiste popis tohoto apletu.
 *
 * @author     jmeno autora
 * @version    cislo verze, datum
 */
public class $CLASSNAME extends Applet 
{

    //Atributy instance - nahradte ukazkovy kod vasim vlastnim
    private int x;

    
    /**
     * Tato metoda je volana prohlizecem nebo appletviewerem. 
     * Informuje aplet o tom, ze byl nahran do systemu. 
     * Je volana jeste pred prvnim zavolanim metody <code>start</code>.
     */
    public void init() 
    {
        //Zde doplnte potrebnou inicializaci vaseho apletu
        
    }
    
    
    /**
     * Tato metoda je volana prohlizecem nebo appletviewerem, ktery takto
     * informuje aplet, ze byl spusten. Je volana po metode <code>init</code>
     * a pri kazdem opetovnem navstiveni stranky.
     */
    public void start() 
    {
        //Vlozte kod potrebny pro stusteni apletu pri kazde navsteve stranky
        
    }


    /**
     * Toto je pravdepodobne nejdulezitejsi metoda appletu - 
     * zde je uveden kod pro vykresleni appletu na obrazovku.
     *
     * @param  g   objekt tridy Graphics pro vykresleni na obrazovku
     */
    public void paint(Graphics g) 
    {
        //Aplet zobrazi jednoduchy text
        g.setColor(java.awt.Color.white);
        g.fillRect(0, 0, 200, 100);
        g.setColor(java.awt.Color.black);
        g.drawString("Ukazkovy aplet", 20, 20);
        g.setColor(java.awt.Color.blue);
        g.drawString("vytvoreny v prostredi BlueJ", 20, 40);
    }
    
    
    /**
     * Tato metoda je volana prohlizecem nebo appletviewerem, který takto
     * oznamuje apletu, ze se ma svoji cinnost ukoncit. 
     * Je volana pri nahrazeni stranky s apletem jinou strankou 
     * a pred tim nez je applet volana metoda <code>destroy</code>.
     * V teto metode jsou ukoncovana spustena vlakna.
     */
    public void stop() 
    {
        //Vlozte kod potrebny pro zastaveni cinnosti apletu
        
    }

    
    /**
     * Tato metoda je volana prohlizecem nebo appletviewerem, ktery takto
     * oznamuje apletu, ze ma uvolnit všechny alokovane zdroje. 
     * Pred touto metodou je vzdy volana metoda <code>stop</code>.
     * /
    public void destroy() 
    {
        // vlozte kod potrebny pro uvolneni alokovanych zdroju
    
    }

    
    /**
     * Vraci informace o tomto appletu
     * Applet by mel prepsat tuto metodu a vratit retezec obsahujici
     * informace o autorovi, verzi a autorskych pravech k appletu.
     *
     * @return retezec obsahuji informace o appletu
     */
    public String getAppletInfo() 
    {
        // zde vlozte informace o appletu
        return "Nazev:   \n" +
               "Autor:   \n" +
               "Jednoduchy applet vykreslujici dva retezce.";
    }
    
    
    /**
     * Vraci informace o parametrech, ktere tento applet umi zpracovat.
     * Applet by mel prekryt tuto metodu tak, aby vracela pole poli
     * textovych retezcu popisujicich tyto parametry.
     * Kazdy prvek tohoto pole se sklada ze tri retezcu obsahujicich
     * jmeno, typ a popis.
     *
     * @return pole retezcu reprezentujici parametry tohoto appletu
     */
    public String[][] getParameterInfo() 
    {
        //Zde vlozte informace o appletu
        String paramInfo[][] = {
            {"prvniParametr", "1-10", "popis prvniho parametru"},
            {"stav", "boolean", "popis druheho parametru"},
            {"obrazky", "url", "popis tretiho parametru"}
        };
        return paramInfo;
    }
    
}