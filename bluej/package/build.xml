<?xml version="1.0" encoding="UTF-8"?>
<project name="bluej-package" default="dist">

    <patternset id="bluej.libfiles">
        <exclude name="**/.#*" />
        <include name="lib/bluej.jar" />
        <include name="lib/bluejcore.jar" />
        <include name="lib/bluejeditor.jar" />
        <include name="lib/bluejext.jar" />
        <include name="lib/antlr.jar" />
        <include name="lib/junit.jar" />
        <include name="lib/MRJ141Stubs.jar" />
        <include name="lib/bluej.defs" />
        <include name="lib/moe.defs" />
        <include name="lib/userlib/README.TXT" />
    </patternset>

    <patternset id="bluej.libdirs">
        <exclude name="**/.#*" />
        <include name="lib/images/*.gif" />
        <include name="lib/images/*.jpg" />
        <include name="lib/images/*.icns" />
        <include name="lib/afrikaans/" />
    	<include name="lib/catalan/" />
        <include name="lib/dutch/" />
        <include name="lib/chinese/" />
        <include name="lib/czech/" />
        <include name="lib/english/" />
        <include name="lib/french/" />
        <include name="lib/german/" />
        <include name="lib/greek/" />
        <include name="lib/italian/" />
        <include name="lib/japanese/" />
        <include name="lib/korean/" />
        <include name="lib/portuguese/" />
        <include name="lib/spanish/" />
        <include name="lib/swedish/" />
        <include name="lib/extensions/" />
    </patternset>

    <patternset id="bluej.examples">
        <exclude name="**/*.pkh" />
        <exclude name="**/.#*" />
        <include name="examples/appletdemo/" />
        <include name="examples/debugdemo/" />
        <include name="examples/hello/" />
        <include name="examples/people/" />
        <include name="examples/people2/" />
        <include name="examples/picture/" />
        <include name="examples/file-reader/" />
        <include name="examples/shapes/" />
    </patternset>

    <patternset id="bluej.examples.classes">
        <include name="examples/people/*.class" />
    </patternset>

    <target name="dist">
        <delete dir="install_tmp" />
        <mkdir dir="install_tmp"/>

        <!-- construct the directory structure we want for the distribution -->
        <copy todir="install_tmp">
            <fileset dir="${bluej_home}" >
                <patternset refid="bluej.libfiles"/>
                <patternset refid="bluej.libdirs"/>
                <patternset refid="bluej.examples"/>
            </fileset>
        </copy>

        <!-- make sure the people .class files are dated in the future so they
             will appear to be compiled -->
        <touch datetime="1/1/2010 12:00 pm">
            <fileset dir="install_tmp" >
                <patternset refid="bluej.examples.classes"/>
            </fileset>
        </touch>

        <chmod dir="install_tmp" perm="a+r"/>

        <!-- jar the entire distribution into one jar file            -->
        <!-- (use zip instead of jar to avoid generation of manifest) -->
        <zip zipfile="bluej-dist.jar"
             basedir="install_tmp"
             compress="yes"
        />

        <antcall target="mac-dist" />
        
        <delete dir="install_tmp" />
        <mkdir dir="install_tmp"/>

        <!-- Build the program which calculates the length of the  -->
        <!-- distribution jar, and stores its length in the        -->
        <!-- installer properties                                  -->
        <javac
               executable="${build_java_home}/bin/javac"
               fork="yes"
               srcdir="."
               destdir="install_tmp"
               includes="InstallerProps.java"
               debug="true"
        />

        <!-- Now run it -->
        <java
               classname="InstallerProps"
               fork="yes"
               jvm="${build_java_home}/bin/java"
            >
            <classpath>
                 <pathelement location="install_tmp" />
            </classpath>
            <arg line="installer.props"/>
        </java>

        <!-- And delete it as it's no longer needed   -->
        <delete file="install_tmp/InstallerProps.class"/>
        
        <!-- Copy other files needed by the installer -->
        <copy todir="install_tmp" file="bluej-dist.jar"/>
        <copy todir="install_tmp" file="installer-logo.gif"/>

        <!-- compile the installer -->
        <javac
               executable="${build_java_home}/bin/javac"
               fork="yes"
               srcdir="."
               destdir="install_tmp"
               includes="Installer.java"
               debug="true"
        >
        	<compilerarg line="-source 1.3"/>
    		<compilerarg line="-target 1.3"/>
    	</javac>

        <!-- bundle the resulting class into the final distribution jar file -->
        <jar jarfile="bluej-dist-new.jar"
             basedir="install_tmp"
             compress="no"
             manifest="manifest"
             whenempty="fail" />

        <!-- cleanup
             leaves bluej-dist.jar for distribution to whoever is
             building the windows installer and leaves
             bluej-dist-new.jar which is the platform independant
             distributable -->
        <delete dir="install_tmp"/>
    </target>


    <target name="mac-dist">
        <delete dir="mac_tmp" />
        
        <!-- Create the directory which will be the top level directory when unzipped-->
        <property name="zip_dir" location="mac_tmp/BlueJ ${bluej.version}/" />
        <mkdir dir="${zip_dir}" />
        
        <!-- Files in this list will get the executable attribute set -->
        <property name="executable_files" value="**/PkgInfo,**/JavaApplicationStub" />

        <!-- copy the skeleton mac dir -->
        <copy todir="${zip_dir}/BlueJ.app">
            <fileset dir="macfiles/BlueJ.app"/> 
        </copy>

        <!-- update version number -->
        <replaceregexp byline="true">
            <regexp pattern="VERSION" />
            <substitution expression="${bluej.version}" />
            <fileset dir="${zip_dir}/BlueJ.app/Contents" includes="Info.plist" />
        </replaceregexp>        
        
        <copy todir="${zip_dir}">
            <fileset dir="${bluej_home}">
                <patternset refid="bluej.libfiles" />
                <patternset refid="bluej.libdirs" />
                <patternset refid="bluej.examples" />
            </fileset>
        </copy>
        
        <!-- The lib dir should not be in the root dir, so we move the contents to the proper mac-location -->
        <move todir="${zip_dir}/BlueJ.app/Contents/Resources/Java">
            <fileset dir="${zip_dir}/lib/" />
        </move>
        <delete dir="${zip_dir}/BlueJ.app/Contents/Resources/Java/lib" />

        <!-- ZIP it -->
        <zip destfile="BlueJ-mac.zip" duplicate="fail">
            <zipfileset dir="mac_tmp" excludes="${executable_files}" />
            <!-- Make the files executable that need to be executable -->
            <zipfileset dir="mac_tmp" filemode="755" includes="${executable_files}" />
        </zip>

        <delete dir="mac_tmp" />
    </target>

    
    <!-- windows-dist requires that a bluej-dist.jar file is placed into
         the package directory. This is unjarred and then rebuilt into
         the windows installer package (left as winsetup/bluejsetup.exe)-->
    <target name="windows-dist">
        <delete dir="install_tmp" />
        <unzip src="bluej-dist.jar" dest="install_tmp" />

        <exec dir="winsetup" executable="C:\Program Files\Inno Setup 5\ISCC.exe">
            <arg line="bluej.iss"/>
        </exec>

        <delete dir="install_tmp" />
    </target>

    <target name="clean">
        <delete file="bluej-dist.jar" />
        <delete file="bluej-dist-new.jar" />
        <delete file="BlueJ-mac.zip" />
        <delete file="winsetup/bluejsetup.exe" />
        <delete dir="install_tmp" />
    </target>

</project>
