// $ANTLR 2.7.4: java.g -> JavaTokenTypes.txt$
Java    // output token vocab name
BLOCK=4
MODIFIERS=5
OBJBLOCK=6
SLIST=7
CTOR_DEF=8
METHOD_DEF=9
VARIABLE_DEF=10
INSTANCE_INIT=11
STATIC_INIT=12
TYPE=13
CLASS_DEF=14
INTERFACE_DEF=15
PACKAGE_DEF=16
ARRAY_DECLARATOR=17
EXTENDS_CLAUSE=18
IMPLEMENTS_CLAUSE=19
PARAMETERS=20
PARAMETER_DEF=21
LABELED_STAT=22
TYPECAST=23
INDEX_OP=24
POST_INC=25
POST_DEC=26
METHOD_CALL=27
EXPR=28
ARRAY_INIT=29
IMPORT=30
UNARY_MINUS=31
UNARY_PLUS=32
CASE_GROUP=33
ELIST=34
FOR_INIT=35
FOR_CONDITION=36
FOR_ITERATOR=37
EMPTY_STAT=38
FINAL="final"=39
ABSTRACT="abstract"=40
STRICTFP="strictfp"=41
SUPER_CTOR_CALL=42
CTOR_CALL=43
VARIABLE_PARAMETER_DEF=44
STATIC_IMPORT=45
ENUM_DEF=46
ENUM_CONSTANT_DEF=47
FOR=48
FOR_EACH=49
ANNOTATION_DEF=50
ANNOTATION=51
ANNOTATION_MEMBER_VALUE_PAIR=52
ANNOTATION_FIELD_DEF=53
ANNOTATION_ARRAY_INIT=54
TYPE_ARGUMENT=55
TYPE_PARAMETERS=56
WILDCARD_TYPE=57
TYPE_UPPER_BOUNDS=58
TYPE_LOWER_BOUNDS=59
COMMENT_DEF=60
LITERAL_package="package"=61
SEMI=62
LITERAL_import="import"=63
LITERAL_static="static"=64
LBRACK=65
RBRACK=66
DOT=67
IDENT("an identifier")=68
QUESTION=69
LITERAL_extends="extends"=70
LITERAL_super="super"=71
LT=72
COMMA=73
GT=74
SR=75
BSR=76
LITERAL_void="void"=77
LITERAL_boolean="boolean"=78
LITERAL_byte="byte"=79
LITERAL_char="char"=80
LITERAL_short="short"=81
LITERAL_int="int"=82
LITERAL_float="float"=83
LITERAL_long="long"=84
LITERAL_double="double"=85
STAR=86
LITERAL_private="private"=87
LITERAL_public="public"=88
LITERAL_protected="protected"=89
LITERAL_transient="transient"=90
LITERAL_native="native"=91
LITERAL_synchronized="synchronized"=92
LITERAL_volatile="volatile"=93
AT=94
LPAREN=95
RPAREN=96
ASSIGN=97
LCURLY=98
RCURLY=99
LITERAL_class="class"=100
LITERAL_interface="interface"=101
LITERAL_enum="enum"=102
BAND=103
LITERAL_default="default"=104
LITERAL_implements="implements"=105
LITERAL_this="this"=106
LITERAL_throws="throws"=107
TRIPLE_DOT=108
COLON=109
LITERAL_if="if"=110
LITERAL_else="else"=111
LITERAL_while="while"=112
LITERAL_do="do"=113
LITERAL_break="break"=114
LITERAL_continue="continue"=115
LITERAL_return="return"=116
LITERAL_switch="switch"=117
LITERAL_throw="throw"=118
LITERAL_assert="assert"=119
LITERAL_for="for"=120
LITERAL_case="case"=121
LITERAL_try="try"=122
LITERAL_finally="finally"=123
LITERAL_catch="catch"=124
PLUS_ASSIGN=125
MINUS_ASSIGN=126
STAR_ASSIGN=127
DIV_ASSIGN=128
MOD_ASSIGN=129
SR_ASSIGN=130
BSR_ASSIGN=131
SL_ASSIGN=132
BAND_ASSIGN=133
BXOR_ASSIGN=134
BOR_ASSIGN=135
LOR=136
LAND=137
BOR=138
BXOR=139
NOT_EQUAL=140
EQUAL=141
LE=142
GE=143
LITERAL_instanceof="instanceof"=144
SL=145
PLUS=146
MINUS=147
DIV=148
MOD=149
INC=150
DEC=151
BNOT=152
LNOT=153
LITERAL_true="true"=154
LITERAL_false="false"=155
LITERAL_null="null"=156
LITERAL_new="new"=157
NUM_INT("a number")=158
CHAR_LITERAL=159
STRING_LITERAL=160
NUM_FLOAT=161
NUM_LONG=162
NUM_DOUBLE=163
WS=164
SL_COMMENT=165
ML_COMMENT=166
ESC=167
HEX_DIGIT=168
VOCAB=169
IDENT_LETTER=170
EXPONENT=171
FLOAT_SUFFIX=172
