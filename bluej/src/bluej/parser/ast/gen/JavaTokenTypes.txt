// $ANTLR 2.7.4: java.g -> JavaTokenTypes.txt$
Java    // output token vocab name
BLOCK=4
MODIFIERS=5
OBJBLOCK=6
SLIST=7
CTOR_DEF=8
METHOD_DEF=9
VARIABLE_DEF=10
INSTANCE_INIT=11
STATIC_INIT=12
TYPE=13
CLASS_DEF=14
INTERFACE_DEF=15
PACKAGE_DEF=16
ARRAY_DECLARATOR=17
EXTENDS_CLAUSE=18
IMPLEMENTS_CLAUSE=19
PARAMETERS=20
PARAMETER_DEF=21
LABELED_STAT=22
TYPECAST=23
INDEX_OP=24
POST_INC=25
POST_DEC=26
METHOD_CALL=27
EXPR=28
ARRAY_INIT=29
IMPORT=30
UNARY_MINUS=31
UNARY_PLUS=32
CASE_GROUP=33
ELIST=34
FOR_INIT=35
FOR_CONDITION=36
FOR_ITERATOR=37
EMPTY_STAT=38
FINAL="final"=39
ABSTRACT="abstract"=40
STRICTFP="strictfp"=41
SUPER_CTOR_CALL=42
CTOR_CALL=43
VARIABLE_PARAMETER_DEF=44
STATIC_IMPORT=45
ENUM_DEF=46
ENUM_CONSTANT_DEF=47
FOR=48
FOR_EACH=49
ANNOTATION_DEF=50
ANNOTATION=51
ANNOTATION_MEMBER_VALUE_PAIR=52
ANNOTATION_FIELD_DEF=53
ANNOTATION_ARRAY_INIT=54
TYPE_ARGUMENT=55
TYPE_PARAMETERS=56
WILDCARD_TYPE=57
TYPE_UPPER_BOUNDS=58
TYPE_LOWER_BOUNDS=59
COMMENT_DEF=60
ML_COMMENT=61
LITERAL_package="package"=62
SEMI=63
LITERAL_import="import"=64
LITERAL_static="static"=65
LBRACK=66
RBRACK=67
DOT=68
IDENT("an identifier")=69
QUESTION=70
LITERAL_extends="extends"=71
LITERAL_super="super"=72
LT=73
COMMA=74
GT=75
SR=76
BSR=77
LITERAL_void="void"=78
LITERAL_boolean="boolean"=79
LITERAL_byte="byte"=80
LITERAL_char="char"=81
LITERAL_short="short"=82
LITERAL_int="int"=83
LITERAL_float="float"=84
LITERAL_long="long"=85
LITERAL_double="double"=86
STAR=87
LITERAL_private="private"=88
LITERAL_public="public"=89
LITERAL_protected="protected"=90
LITERAL_transient="transient"=91
LITERAL_native="native"=92
LITERAL_synchronized="synchronized"=93
LITERAL_volatile="volatile"=94
AT=95
LPAREN=96
RPAREN=97
ASSIGN=98
LCURLY=99
RCURLY=100
LITERAL_class="class"=101
LITERAL_interface="interface"=102
LITERAL_enum="enum"=103
BAND=104
LITERAL_default="default"=105
LITERAL_implements="implements"=106
LITERAL_this="this"=107
LITERAL_throws="throws"=108
TRIPLE_DOT=109
COLON=110
LITERAL_if="if"=111
LITERAL_else="else"=112
LITERAL_while="while"=113
LITERAL_do="do"=114
LITERAL_break="break"=115
LITERAL_continue="continue"=116
LITERAL_return="return"=117
LITERAL_switch="switch"=118
LITERAL_throw="throw"=119
LITERAL_assert="assert"=120
LITERAL_for="for"=121
LITERAL_case="case"=122
LITERAL_try="try"=123
LITERAL_finally="finally"=124
LITERAL_catch="catch"=125
PLUS_ASSIGN=126
MINUS_ASSIGN=127
STAR_ASSIGN=128
DIV_ASSIGN=129
MOD_ASSIGN=130
SR_ASSIGN=131
BSR_ASSIGN=132
SL_ASSIGN=133
BAND_ASSIGN=134
BXOR_ASSIGN=135
BOR_ASSIGN=136
LOR=137
LAND=138
BOR=139
BXOR=140
NOT_EQUAL=141
EQUAL=142
LE=143
GE=144
LITERAL_instanceof="instanceof"=145
SL=146
PLUS=147
MINUS=148
DIV=149
MOD=150
INC=151
DEC=152
BNOT=153
LNOT=154
LITERAL_true="true"=155
LITERAL_false="false"=156
LITERAL_null="null"=157
LITERAL_new="new"=158
NUM_INT("a number")=159
CHAR_LITERAL=160
STRING_LITERAL=161
NUM_FLOAT=162
NUM_LONG=163
NUM_DOUBLE=164
WS=165
SL_COMMENT=166
ESC=167
HEX_DIGIT=168
EXPONENT=169
FLOAT_SUFFIX=170
